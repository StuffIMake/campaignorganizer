{"version":3,"file":"AssetsView-2tUIhRQK.js","sources":["../../src/components/ui/Tabs.tsx","../../src/features/assets/views/AssetsView.tsx"],"sourcesContent":["import React, { useState, ReactElement } from 'react';\n\ninterface TabsProps {\n  value: number;\n  onChange: (event: React.SyntheticEvent, newValue: number) => void;\n  children: React.ReactNode;\n  variant?: 'standard' | 'fullWidth' | 'scrollable';\n  className?: string;\n}\n\ninterface TabProps {\n  label: string;\n  value?: number;\n  disabled?: boolean;\n  icon?: React.ReactNode;\n  className?: string;\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  value: number;\n  index: number;\n  className?: string;\n}\n\nexport const Tabs: React.FC<TabsProps> = ({\n  value,\n  onChange,\n  children,\n  variant = 'standard',\n  className = '',\n}) => {\n  const variantClasses = {\n    standard: '',\n    fullWidth: 'grid',\n    scrollable: 'overflow-x-auto flex scrollbar-thin'\n  };\n  \n  // Calculate grid-template-columns for fullWidth\n  const childrenCount = React.Children.count(children);\n  const gridTemplateColumns = variant === 'fullWidth' ? `grid-cols-${childrenCount}` : '';\n  \n  return (\n    <div \n      className={`\n        border-b border-slate-700/50\n        ${variantClasses[variant]}\n        ${variant === 'fullWidth' ? gridTemplateColumns : ''}\n        ${className}\n      `}\n      role=\"tablist\"\n    >\n      {children}\n    </div>\n  );\n};\n\nexport const Tab: React.FC<TabProps> = ({\n  label,\n  value = 0,\n  disabled = false,\n  icon,\n  className = '',\n}) => {\n  // useContext would be better here but for simplicity we'll use props\n  const isSelected = value === (value ?? 0);\n  \n  return (\n    <button\n      role=\"tab\"\n      aria-selected={isSelected}\n      disabled={disabled}\n      className={`\n        inline-flex items-center justify-center\n        px-4 py-2.5 text-sm font-medium\n        border-b-2 -mb-px\n        focus-visible:outline-none\n        transition-all duration-200\n        ${isSelected \n          ? 'text-primary-400 border-primary-400' \n          : 'text-slate-400 border-transparent hover:text-slate-200 hover:border-slate-600'\n        }\n        ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\n        ${className}\n      `}\n    >\n      {icon && <span className=\"mr-2\">{icon}</span>}\n      {label}\n    </button>\n  );\n};\n\nexport const TabPanel: React.FC<TabPanelProps> = ({\n  children,\n  value,\n  index,\n  className = '',\n}) => {\n  const hidden = value !== index;\n  \n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={hidden}\n      id={`tabpanel-${index}`}\n      aria-labelledby={`tab-${index}`}\n      className={`py-4 ${className}`}\n    >\n      {!hidden && children}\n    </div>\n  );\n};\n\n// Composite component for managing tabs state\ninterface TabsManagerProps {\n  children: React.ReactNode;\n  defaultTab?: number;\n  className?: string;\n}\n\nexport const TabsManager: React.FC<TabsManagerProps> = ({\n  children,\n  defaultTab = 0,\n  className = '',\n}) => {\n  const [value, setValue] = useState(defaultTab);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue);\n  };\n\n  // Use type assertions to safely clone elements with proper props\n  const childrenWithProps = React.Children.map(children, child => {\n    if (!React.isValidElement(child)) return child;\n    \n    // For Tabs component\n    if (child.type === Tabs) {\n      return React.cloneElement(child as ReactElement<TabsProps>, {\n        value,\n        onChange: handleChange\n      } as Partial<TabsProps>);\n    }\n    \n    // For TabPanel components\n    else if (child.type === TabPanel) {\n      return React.cloneElement(child as ReactElement<TabPanelProps>, {\n        value\n      } as Partial<TabPanelProps>);\n    }\n    \n    return child;\n  });\n\n  return (\n    <div className={className}>\n      {childrenWithProps}\n    </div>\n  );\n};\n\nexport default { Tabs, Tab, TabPanel, TabsManager }; ","import React, { useState } from 'react';\nimport { \n  Box, \n  Typography, \n  Tabs, \n  Tab, \n  Button \n} from '../../../components/ui';\nimport { \n  AssetDropZone,\n  AssetList,\n  JsonEditor,\n  NewJsonDialog\n} from '../components';\nimport { useAssetManager, useJsonEditor } from '../hooks';\nimport { AddIcon } from '../../../assets/icons';\n\nexport const AssetsView: React.FC = () => {\n  const [tabValue, setTabValue] = useState(0);\n  const [showAssetManager, setShowAssetManager] = useState(false);\n  \n  const { hasStoredAssets, loadAssetLists } = useAssetManager();\n  const { setIsCreateJsonOpen } = useJsonEditor();\n  \n  // Handle tab change\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n  \n  // Handle refreshing asset data\n  const handleAssetImport = () => {\n    loadAssetLists();\n  };\n  \n  // Open new JSON dialog\n  const handleCreateNewJson = () => {\n    setIsCreateJsonOpen(true);\n  };\n  \n  return (\n    <div className=\"p-6\">\n      <Box className=\"flex justify-between items-center mb-6\">\n        <Typography variant=\"h4\" component=\"h1\">\n          Assets\n        </Typography>\n        \n        <div className=\"space-x-2\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onPress={() => setShowAssetManager(true)}\n          >\n            Import/Export Assets\n          </Button>\n          \n          {tabValue === 2 && (\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              startIcon={<AddIcon />}\n              onPress={handleCreateNewJson}\n            >\n              Create New JSON\n            </Button>\n          )}\n        </div>\n      </Box>\n      \n      {!hasStoredAssets ? (\n        <AssetDropZone isFullPage onAssetImport={handleAssetImport} />\n      ) : (\n        <>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }} className=\"mb-4\">\n            <Tabs \n              value={tabValue} \n              onChange={handleTabChange} \n              aria-label=\"asset tabs\"\n            >\n              <Tab label=\"Audio\" />\n              <Tab label=\"Images\" />\n              <Tab label=\"Data\" />\n            </Tabs>\n          </Box>\n          \n          <Box className=\"hidden\" sx={{ display: tabValue === 0 ? 'block' : 'none' }}>\n            <AssetList type=\"audio\" title=\"Audio\" />\n          </Box>\n          \n          <Box className=\"hidden\" sx={{ display: tabValue === 1 ? 'block' : 'none' }}>\n            <AssetList type=\"images\" title=\"Images\" />\n          </Box>\n          \n          <Box className=\"hidden\" sx={{ display: tabValue === 2 ? 'block' : 'none' }}>\n            <AssetList type=\"data\" title=\"Data\" />\n          </Box>\n          \n          {/* Dialogs and modals */}\n          <JsonEditor />\n          <NewJsonDialog />\n          \n          {/* Asset manager dialog */}\n          {showAssetManager && (\n            <AssetDropZone \n              dialogOpen={showAssetManager} \n              onClose={() => setShowAssetManager(false)}\n              onAssetImport={handleAssetImport}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n}; "],"names":["Tabs","value","onChange","children","variant","className","variantClasses","childrenCount","React","gridTemplateColumns","jsx","Tab","label","disabled","icon","isSelected","jsxs","AssetsView","tabValue","setTabValue","useState","showAssetManager","setShowAssetManager","hasStoredAssets","loadAssetLists","useAssetManager","setIsCreateJsonOpen","useJsonEditor","handleTabChange","event","newValue","handleAssetImport","handleCreateNewJson","Box","Typography","Button","AddIcon","Fragment","AssetList","JsonEditor","NewJsonDialog","AssetDropZone"],"mappings":"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"}