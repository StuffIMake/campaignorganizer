{"version":3,"file":"PDFViewer-CJxpvW3B.js","sources":["../../src/components/PDFViewer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CircularProgress } from './ui';\nimport { AssetManager } from '../services/assetManager';\nimport { getPdfFilename } from '../utils/pdfUtils';\n\n\ninterface PDFViewerProps {\n  assetName: string;\n  width?: string | number;\n  height?: string | number;\n  onError?: (error: string) => void;\n  showTopBar?: boolean;\n}\n\nconst PDFViewer: React.FC<PDFViewerProps> = ({\n  assetName,\n  width = '100%',\n  height = '600px',\n  onError,\n  showTopBar = true\n}) => {\n  const [pdfUrl, setPdfUrl] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Load PDF from assets when component mounts\n  useEffect(() => {\n    const loadPdfFromAssets = async () => {\n      if (!assetName) {\n        const errorMsg = 'No PDF asset name provided';\n        setError(errorMsg);\n        if (onError) onError(errorMsg);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        \n        // If it's already a URL (http or data), use it directly\n        if (assetName.startsWith('http') || assetName.startsWith('data:')) {\n          setPdfUrl(assetName);\n          setLoading(false);\n          return;\n        }\n        \n        // Otherwise get it from the asset manager\n        const dataUrl = await AssetManager.getAssetUrl('images', assetName);\n        \n        if (!dataUrl) {\n          const errorMsg = `Could not load PDF: ${assetName}`;\n          setError(errorMsg);\n          if (onError) onError(errorMsg);\n          setLoading(false);\n          return;\n        }\n        \n        setPdfUrl(dataUrl);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error loading PDF:', err);\n        const errorMsg = `Error loading PDF: ${err instanceof Error ? err.message : String(err)}`;\n        setError(errorMsg);\n        if (onError) onError(errorMsg);\n        setLoading(false);\n      }\n    };\n\n    loadPdfFromAssets();\n  }, [assetName, onError]);\n\n\n  // Function to get PDF viewer parameters\n  const getPdfViewerParams = (): string => {\n    let params = '#';\n    \n    // Hide toolbars\n    params += 'toolbar=0&';\n    \n    // Hide navigation panes/sidebar\n    params += 'navpanes=0&scrollbar=0&sidebar=0&';\n    \n    // Set view mode\n    params += 'view=Fit&zoom=page-width&';\n    \n    // Disable default page mode that might show outlines/thumbs\n    params += 'pagemode=none&embedded=true';\n    \n    return params;\n  };\n\n  // Render loading state\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center border border-gray-300 dark:border-gray-700 rounded\" style={{ width, height }}>\n        <CircularProgress size={32} />\n      </div>\n    );\n  }\n\n  // Render error state\n  if (error || !pdfUrl) {\n    return (\n      <div className=\"p-2 border border-red-300 dark:border-red-700 text-red-500 dark:text-red-400 rounded\" style={{ width, height: 'auto' }}>\n        {error || 'Could not load PDF'}\n      </div>\n    );\n  }\n\n  // Render PDF viewer\n  return (\n    <div className=\"relative w-full h-full\" style={{ width, height }}>\n      <iframe\n        src={`${pdfUrl}${getPdfViewerParams()}`}\n        className=\"w-full h-full\"\n        style={{ \n          border: 'none',\n          backgroundColor: 'transparent'\n        }}\n      >\n      </iframe>\n    </div>\n  );\n};\n\nexport default PDFViewer; "],"names":["PDFViewer","assetName","width","height","onError","showTopBar","pdfUrl","setPdfUrl","useState","loading","setLoading","error","setError","useEffect","errorMsg","dataUrl","AssetManager","err","getPdfViewerParams","params","jsx","CircularProgress"],"mappings":"qGAcA,MAAMA,EAAsC,CAAC,CAC3C,UAAAC,EACA,MAAAC,EAAQ,OACR,OAAAC,EAAS,QACT,QAAAC,EACA,WAAAC,EAAa,EACf,IAAM,CACJ,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAAwB,IAAI,EAClD,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAkB,EAAI,EAC9C,CAACG,EAAOC,CAAQ,EAAIJ,EAAAA,SAAwB,IAAI,EAGtDK,EAAAA,UAAU,IAAM,EACY,SAAY,CACpC,GAAI,CAACZ,EAAW,CACd,MAAMa,EAAW,6BACjBF,EAASE,CAAQ,EACbV,KAAiBU,CAAQ,EAC7BJ,EAAW,EAAK,EAChB,MAAA,CAGE,GAAA,CAIF,GAHAA,EAAW,EAAI,EAGXT,EAAU,WAAW,MAAM,GAAKA,EAAU,WAAW,OAAO,EAAG,CACjEM,EAAUN,CAAS,EACnBS,EAAW,EAAK,EAChB,MAAA,CAIF,MAAMK,EAAU,MAAMC,EAAa,YAAY,SAAUf,CAAS,EAElE,GAAI,CAACc,EAAS,CACN,MAAAD,EAAW,uBAAuBb,CAAS,GACjDW,EAASE,CAAQ,EACbV,KAAiBU,CAAQ,EAC7BJ,EAAW,EAAK,EAChB,MAAA,CAGFH,EAAUQ,CAAO,EACjBL,EAAW,EAAK,QACTO,EAAK,CACJ,QAAA,MAAM,qBAAsBA,CAAG,EACjC,MAAAH,EAAW,sBAAsBG,aAAe,MAAQA,EAAI,QAAU,OAAOA,CAAG,CAAC,GACvFL,EAASE,CAAQ,EACbV,KAAiBU,CAAQ,EAC7BJ,EAAW,EAAK,CAAA,CAEpB,GAEkB,CAAA,EACjB,CAACT,EAAWG,CAAO,CAAC,EAIvB,MAAMc,EAAqB,IAAc,CACvC,IAAIC,EAAS,IAGH,OAAAA,GAAA,aAGAA,GAAA,oCAGAA,GAAA,4BAGAA,GAAA,8BAEHA,CACT,EAGA,OAAIV,EAECW,EAAAA,IAAA,MAAA,CAAI,UAAU,uFAAuF,MAAO,CAAE,MAAAlB,EAAO,OAAAC,CAAA,EACpH,SAAAiB,EAAAA,IAACC,EAAiB,CAAA,KAAM,EAAI,CAAA,EAC9B,EAKAV,GAAS,CAACL,EAEVc,EAAA,IAAC,MAAI,CAAA,UAAU,uFAAuF,MAAO,CAAE,MAAAlB,EAAO,OAAQ,MAC3H,EAAA,SAAAS,GAAS,oBACZ,CAAA,EAMFS,MAAC,OAAI,UAAU,yBAAyB,MAAO,CAAE,MAAAlB,EAAO,OAAAC,GACtD,SAAAiB,EAAA,IAAC,SAAA,CACC,IAAK,GAAGd,CAAM,GAAGY,EAAoB,CAAA,GACrC,UAAU,gBACV,MAAO,CACL,OAAQ,OACR,gBAAiB,aAAA,CACnB,CAAA,EAGJ,CAEJ"}