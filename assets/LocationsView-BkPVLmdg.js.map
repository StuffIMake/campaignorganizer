{"version":3,"file":"LocationsView-BkPVLmdg.js","sources":["../../src/components/ui/MultiAutocomplete.tsx","../../src/features/locations/components/LocationItem.tsx","../../src/features/locations/components/LocationSearch.tsx","../../src/features/locations/components/LocationDescriptionDialog.tsx","../../src/features/locations/components/LocationFormDialog.tsx","../../src/features/locations/hooks/useLocations.ts","../../src/features/locations/hooks/useLocationForm.ts","../../src/features/locations/hooks/useNotifications.ts","../../src/features/locations/views/LocationsView.tsx"],"sourcesContent":["import React from 'react';\nimport { Autocomplete, Chip, TextField } from './';\nimport type { AutocompleteRenderInputParams } from './Autocomplete';\n\nexport interface MultiAutocompleteProps<T> {\n  options: T[];\n  value: T[];\n  onChange: (event: React.ChangeEvent<{}> | null, value: T[]) => void;\n  getOptionLabel: (option: T) => string;\n  renderInput: (params: AutocompleteRenderInputParams) => React.ReactNode;\n  isOptionEqualToValue?: (option: T, value: T) => boolean;\n  renderTags?: (value: T[], getTagProps: any) => React.ReactNode;\n  className?: string;\n  multiple?: boolean;\n}\n\nfunction MultiAutocomplete<T>(props: MultiAutocompleteProps<T>) {\n  // Forward all props to the regular Autocomplete component\n  // but explicitly set multiple to true\n  return (\n    <Autocomplete\n      {...props as any}\n      multiple={true}\n    />\n  );\n}\n\nexport default MultiAutocomplete; ","import React from 'react';\nimport { CustomLocation } from '../../../store';\nimport { \n  Card,\n  CardContent,\n  CardActions,\n  IconButton,\n  Typography,\n  Chip,\n  ListItem,\n} from '../../../components/ui';\nimport {\n  ExpandMoreIcon, \n  ExpandLessIcon,\n  EditIcon,\n  DeleteIcon,\n  PlaceIcon,\n  MusicNoteIcon,\n  HelpIcon,\n} from '../../../assets/icons';\n\ninterface LocationItemProps {\n  location: CustomLocation;\n  level: number;\n  isExpanded: boolean;\n  hasChildren: boolean;\n  onToggleExpand: (locationId: string) => void;\n  onEdit: (location: CustomLocation) => void;\n  onDelete: (locationId: string) => void;\n  onViewDescription: (locationId: string) => void;\n  gridView?: boolean;\n  parentLocation?: CustomLocation | null;\n}\n\nexport const LocationItem: React.FC<LocationItemProps> = ({\n  location,\n  level,\n  isExpanded,\n  hasChildren,\n  onToggleExpand,\n  onEdit,\n  onDelete,\n  onViewDescription,\n  gridView = false,\n  parentLocation = null\n}) => {\n  const testIdName = location.name.replace(/\\s+/g, '-'); // Create a test-id friendly name\n  const hasDescription = location.description && location.description.trim().length > 0;\n  const hasImage = location.imageUrl && location.imageUrl?.trim().length > 0;\n  const hasBackgroundMusic = location.backgroundMusic && location.backgroundMusic?.trim().length > 0;\n  const hasEntrySound = location.entrySound && location.entrySound?.trim().length > 0;\n  const hasParent = !!parentLocation;\n  \n  // Extract file names for display\n  const bgMusicName = hasBackgroundMusic && location.backgroundMusic ? location.backgroundMusic.split('/').pop() : '';\n  const entrySoundName = hasEntrySound && location.entrySound ? location.entrySound.split('/').pop() : '';\n  const imageName = hasImage && location.imageUrl ? location.imageUrl.split('/').pop() : '';\n\n  // Shortened description for preview\n  const shortDescription = hasDescription \n    ? location.description.length > 100 \n      ? `${location.description.substring(0, 100)}...` \n      : location.description\n    : '';\n\n  // Handle sub-location display in tree view\n  const sublocations = getFilteredSublocationsByParentId ? \n    getFilteredSublocationsByParentId(location.id) : [];\n\n  // Function to determine border color based on location level or properties\n  const getBorderColor = () => {\n    // Level-based coloring, but could be replaced with type-based or other logic\n    const colors = [\n      'from-primary-light to-primary-dark',      // Level 0\n      'from-secondary-light to-secondary-dark',  // Level 1\n      'from-accent-light to-accent-dark',        // Level 2\n      'from-teal-400 to-teal-600',               // Level 3\n      'from-amber-400 to-amber-600',             // Level 4\n      'from-rose-400 to-rose-600',               // Level 5+\n    ];\n    \n    return colors[Math.min(level, colors.length - 1)];\n  };\n\n  if (gridView) {\n    // Grid view card style\n    return (\n      <Card\n        className=\"relative shadow-lg hover-lift transition-all duration-300 overflow-hidden h-full rounded-xl\"\n        data-testid={`location-item-${testIdName}`}\n        style={{\n          backgroundImage: hasImage && location.imageUrl ? `url(${location.imageUrl})` : 'none',\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n        }}\n      >\n        {/* Colorful top border */}\n        <div className={`absolute top-0 left-0 right-0 h-1.5 bg-gradient-to-r ${getBorderColor()}`}></div>\n        \n        <div \n          className={`relative h-full flex flex-col ${hasImage ? 'text-white' : ''}`}\n          style={{ \n            background: hasImage \n              ? 'linear-gradient(to bottom, rgba(0,0,0,0.2) 0%, rgba(10,10,20,0.85) 70%)' \n              : 'none',\n          }}\n        >\n          \n          <CardContent className=\"px-5 pt-5 pb-2 flex-grow flex flex-col\">\n            <div \n              className=\"flex items-center cursor-pointer mb-2 z-10\" \n              data-testid={`location-item-view-button-${testIdName}`}\n              onClick={() => onViewDescription(location.id)}\n            >\n              {!hasImage && <PlaceIcon className=\"mr-2 text-primary\" />}\n              <Typography \n                variant=\"h6\" \n                className={`font-display font-semibold line-clamp-1 ${hasImage ? 'text-white' : 'text-text-primary'}`}\n              >\n                {location.name}\n              </Typography>\n            </div>\n            \n            {hasDescription && (\n              <Typography \n                variant=\"body2\" \n                className={`mb-3 line-clamp-2 ${hasImage ? 'text-gray-200' : 'text-text-secondary'}`}\n              >\n                {shortDescription}\n              </Typography>\n            )}\n            \n            <div className=\"flex flex-wrap gap-1.5 mt-auto\">\n              {hasBackgroundMusic && (\n                <Chip\n                  icon={<MusicNoteIcon />}\n                  label={bgMusicName}\n                  size=\"small\"\n                  className={`text-xs rounded-full ${hasImage ? 'bg-black/30 text-white' : 'bg-background-surface/50 text-text-secondary'}`}\n                />\n              )}\n              \n              {hasEntrySound && (\n                <Chip\n                  icon={<MusicNoteIcon />}\n                  label={entrySoundName}\n                  size=\"small\"\n                  className={`text-xs rounded-full ${hasImage ? 'bg-black/30 text-white' : 'bg-background-surface/50 text-text-secondary'}`}\n                />\n              )}\n            </div>\n          </CardContent>\n          \n          <CardActions className={`flex justify-between px-3 py-2 ${hasImage ? 'bg-black/40' : 'bg-background-surface/30'}`}>\n            <div>\n              <IconButton \n                size=\"small\"\n                data-testid=\"location-item-view-button\"\n                onClick={() => onViewDescription(location.id)}\n                className={hasImage ? \"text-white/70 hover:text-white\" : \"text-text-secondary hover:text-primary-light\"}\n              >\n                <HelpIcon />\n              </IconButton>\n            </div>\n            \n            <div className=\"flex\">\n              <IconButton \n                size=\"small\"\n                data-testid=\"location-item-edit-button\"\n                onClick={() => onEdit(location)}\n                className={hasImage ? \"text-white/70 hover:text-white\" : \"text-text-secondary hover:text-secondary-light\"}\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton \n                size=\"small\"\n                data-testid=\"location-item-delete-button\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onDelete(location.id);\n                }}\n                className={hasImage ? \"text-white/70 hover:text-red-400\" : \"text-text-secondary hover:text-error-DEFAULT\"}\n              >\n                <DeleteIcon />\n              </IconButton>\n              {hasChildren && (\n                <IconButton \n                  size=\"small\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onToggleExpand(location.id);\n                  }}\n                  className={hasImage ? \"text-white hover:text-primary-light\" : \"text-text-secondary hover:text-primary-light\"}\n                  data-testid=\"location-item-expand-button\"\n                >\n                  <ExpandMoreIcon />\n                </IconButton>\n              )}\n            </div>\n          </CardActions>\n        </div>\n      </Card>\n    );\n  }\n\n  // List view (tree)\n  return (\n    <ListItem \n      key={location.id}\n      data-testid={`location-item-${testIdName}`}\n      disablePadding\n      className=\"mb-3 flex flex-col items-stretch\"\n      style={{ \n        marginLeft: `${level * 16}px`, \n      }}\n    >\n      <Card\n        className=\"w-full shadow-md hover:shadow-lg transition-all duration-300 rounded-xl overflow-hidden\"\n        style={{ \n          position: 'relative',\n        }}\n      >\n        {/* Colored left border */}\n        <div \n          className={`absolute left-0 top-0 bottom-0 w-1.5 bg-gradient-to-b ${getBorderColor()}`}\n        ></div>\n        \n        <CardContent className=\"p-3 pl-4\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex flex-grow items-center\">\n              <div \n                data-testid={`location-item-view-button-${testIdName}`}\n                className=\"flex items-center cursor-pointer mr-3\" \n                onClick={() => onViewDescription(location.id)}\n              >\n                {hasImage ? (\n                  <div \n                    className=\"w-10 h-10 rounded-md mr-3 bg-cover bg-center border border-primary/30\"\n                    style={{ backgroundImage: `url(${location.imageUrl})` }}\n                  ></div>\n                ) : (\n                  <PlaceIcon className=\"mr-3 text-primary text-xl\" />\n                )}\n                <Typography variant=\"h6\" className=\"font-display font-semibold\">\n                  {location.name}\n                </Typography>\n              </div>\n              \n              <div className=\"flex flex-wrap gap-1.5\">\n                {!hasImage && (\n                  <Chip\n                    icon={<PlaceIcon />}\n                    label=\"No image\"\n                    size=\"small\"\n                    className=\"text-xs rounded-full bg-background-surface/70 text-text-secondary\"\n                  />\n                )}\n                \n                {hasBackgroundMusic && (\n                  <Chip\n                    icon={<MusicNoteIcon />}\n                    label=\"Music\"\n                    size=\"small\"\n                    className=\"text-xs rounded-full bg-background-surface/70 text-text-secondary\"\n                  />\n                )}\n                \n                {hasChildren && sublocations.length > 0 && (\n                  <Chip\n                    label={`${sublocations.length}`}\n                    size=\"small\"\n                    className=\"text-xs rounded-full bg-primary-dark/20 text-primary-light\"\n                  />\n                )}\n              </div>\n            </div>\n            \n            <div className=\"flex items-center\">\n              <IconButton \n                size=\"small\"\n                data-testid=\"location-item-edit-button\"\n                onClick={() => onEdit(location)}\n                className=\"text-text-secondary hover:text-secondary-light mx-1\"\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton \n                size=\"small\"\n                data-testid=\"location-item-delete-button\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onDelete(location.id);\n                }}\n                className=\"text-text-secondary hover:text-error-DEFAULT mx-1\"\n              >\n                <DeleteIcon />\n              </IconButton>\n              {hasChildren && (\n                <IconButton \n                  size=\"small\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onToggleExpand(location.id);\n                  }}\n                  className=\"text-text-secondary hover:text-primary-light ml-1\"\n                  data-testid=\"location-item-expand-button\"\n                >\n                  {isExpanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                </IconButton>\n              )}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </ListItem>\n  );\n};\n\n// Placeholder function for the component to compile - will be overridden by props\nconst getFilteredSublocationsByParentId = (parentId: string) => []; ","/**\n * @file LocationSearch.tsx\n * @description Search component for locations with real-time filtering\n */\n\nimport React from 'react';\nimport { \n  TextField, \n  InputAdornment, \n  IconButton \n} from '../../../components/ui';\nimport { \n  SearchIcon, \n  ClearIcon \n} from '../../../assets/icons';\n\n/**\n * Props for the LocationSearch component\n */\ninterface LocationSearchProps {\n  /** Current search query string */\n  searchQuery: string;\n  \n  /** Callback function to update search query */\n  onSearchChange: (value: string) => void;\n  \n  /** Number of locations matching the current search */\n  resultsCount?: number;\n  \n  /** Total number of locations (used for displaying counts) */\n  totalCount?: number;\n}\n\n/**\n * LocationSearch component\n * \n * Provides a search input field with search and clear icons for filtering locations.\n * Shows the count of matching results.\n * \n * @param {LocationSearchProps} props - Component props\n * @returns {JSX.Element} Rendered component\n */\nexport const LocationSearch: React.FC<LocationSearchProps> = ({\n  searchQuery,\n  onSearchChange,\n  resultsCount,\n  totalCount\n}) => {\n  return (\n    <div className=\"w-full\">\n      <div className=\"bg-background-surface/60 backdrop-blur-sm rounded-xl shadow-md p-1\">\n        <TextField\n          fullWidth\n          placeholder=\"Search locations...\"\n          value={searchQuery}\n          onChange={(value) => onSearchChange(value)}\n          aria-label=\"Search locations\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon className=\"text-text-secondary\" />\n              </InputAdornment>\n            ),\n            endAdornment: searchQuery && (\n              <InputAdornment position=\"end\">\n                <IconButton \n                  onClick={() => onSearchChange('')} \n                  size=\"small\"\n                  aria-label=\"Clear location search\"\n                  className=\"text-text-secondary hover:text-primary-light\"\n                >\n                  <ClearIcon />\n                </IconButton>\n              </InputAdornment>\n            )\n          }}\n        />\n      </div>\n      {(resultsCount !== undefined && totalCount !== undefined) && (\n        <div className=\"text-xs text-text-secondary mt-1 ml-3\">\n          {searchQuery ? `${resultsCount} matches found` : `${totalCount} locations total`}\n        </div>\n      )}\n    </div>\n  );\n}; ","import React from 'react';\nimport { \n  Dialog, \n  DialogTitle, \n  DialogContent, \n  DialogActions, \n  Button,\n  IconButton\n} from '../../../components/ui';\nimport { CloseIcon } from '../../../assets/icons';\nimport MarkdownContent from '../../../components/MarkdownContent';\n\ninterface LocationDescriptionDialogProps {\n  open: boolean;\n  onClose: () => void;\n  locationName: string;\n  description: string;\n  descriptionType?: 'markdown' | 'image' | 'pdf';\n}\n\nexport const LocationDescriptionDialog: React.FC<LocationDescriptionDialogProps> = ({\n  open,\n  onClose,\n  locationName,\n  description,\n  descriptionType = 'markdown'\n}) => {\n  return (\n    <Dialog \n      open={open} \n      onClose={onClose}\n      maxWidth=\"md\"\n      fullWidth\n    >\n      <DialogTitle>\n        <div className=\"flex justify-between items-center\">\n          <span>{locationName}</span>\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        {descriptionType === 'markdown' ? (\n          <MarkdownContent content={description} />\n        ) : descriptionType === 'image' ? (\n          <img src={description} alt={locationName} className=\"max-w-full\" />\n        ) : (\n          <div>PDF view not implemented</div>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onPress={onClose}>Close</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}; ","import React, { useState } from 'react';\nimport { \n  Dialog, \n  DialogTitle, \n  DialogContent, \n  DialogActions, \n  Button,\n  TextField,\n  Grid,\n  FormControlLabel,\n  Switch,\n  IconButton,\n  InputAdornment,\n  Box,\n  Autocomplete,\n  MultiAutocomplete,\n  Chip\n} from '../../../components/ui';\nimport { SearchIcon, ClearIcon } from '../../../assets/icons';\nimport { CustomLocation } from '../../../store';\nimport { Location as LocationType } from '../../../types/location';\n\ninterface LocationFormDialogProps {\n  open: boolean;\n  onClose: () => void;\n  title: string;\n  formData: {\n    name: string;\n    description: string;\n    backgroundMusic: string;\n    entrySound: string;\n    imageUrl: string;\n    descriptionType: 'markdown' | 'image' | 'pdf';\n    parentLocationId: string;\n    coordinates: [number | string, number | string];\n    mixWithParent: boolean;\n    connectedLocations: string[];\n  };\n  onChange: (field: string, value: any) => void;\n  onSubmit: () => void;\n  locations: CustomLocation[];\n  audioFiles: string[];\n  imageFiles: string[];\n  imageSearchQuery: string;\n  setImageSearchQuery: (query: string) => void;\n  parentSearchQuery: string;\n  setParentSearchQuery: (query: string) => void;\n  connectedSearchQuery: string;\n  setConnectedSearchQuery: (query: string) => void;\n  bgMusicSearchQuery: string;\n  setBgMusicSearchQuery: (query: string) => void;\n  entrySoundSearchQuery: string;\n  setEntrySoundSearchQuery: (query: string) => void;\n}\n\nexport const LocationFormDialog: React.FC<LocationFormDialogProps> = ({\n  open,\n  onClose,\n  title,\n  formData,\n  onChange,\n  onSubmit,\n  locations,\n  audioFiles,\n  imageFiles,\n  imageSearchQuery,\n  setImageSearchQuery,\n  parentSearchQuery,\n  setParentSearchQuery,\n  connectedSearchQuery,\n  setConnectedSearchQuery,\n  bgMusicSearchQuery,\n  setBgMusicSearchQuery,\n  entrySoundSearchQuery,\n  setEntrySoundSearchQuery\n}) => {\n  const handleSubmit = () => {\n    onSubmit();\n  };\n\n  // Get selected connected locations\n  const selectedConnectedLocations = locations.filter(loc => \n    formData.connectedLocations.includes(loc.id)\n  );\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"md\"\n      fullWidth\n    >\n      <form onSubmit={handleSubmit}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <Box className=\"space-y-4 mt-2\">\n            <TextField\n              fullWidth\n              label=\"Name\"\n              value={formData.name}\n              onChange={(value) => onChange('name', value)}\n              isRequired\n            />\n            \n            <TextField \n              name=\"description\"\n              value={formData.description}\n              onChange={(value) => onChange('description', value)}\n              fullWidth\n              aria-label=\"Location description\"\n              className=\"mb-4\"\n              InputProps={{\n                inputProps: {\n                  style: { minHeight: '100px' }\n                }\n              }}\n            />\n            \n            <TextField\n              fullWidth\n              label=\"X Coordinate\"\n              value={formData.coordinates[0]?.toString() || ''}\n              onChange={(value) => {\n                // Allow numbers, decimal point, minus sign\n                if (/^-?\\d*\\.?\\d*$/.test(value) || value === '') {\n                  onChange('coordinates', [value === '' ? 0 : value, formData.coordinates[1]]);\n                }\n              }}\n              aria-label=\"X Coordinate\"\n              InputProps={{\n                inputProps: { \n                  type: \"text\",\n                  inputMode: \"decimal\",\n                  pattern: \"[0-9]*[.]?[0-9]*\" \n                }\n              }}\n            />\n            \n            <TextField\n              fullWidth\n              label=\"Y Coordinate\"\n              value={formData.coordinates[1]?.toString() || ''}\n              onChange={(value) => {\n                // Allow numbers, decimal point, minus sign\n                if (/^-?\\d*\\.?\\d*$/.test(value) || value === '') {\n                  onChange('coordinates', [formData.coordinates[0], value === '' ? 0 : value]);\n                }\n              }}\n              aria-label=\"Y Coordinate\"\n              InputProps={{\n                inputProps: { \n                  type: \"text\",\n                  inputMode: \"decimal\",\n                  pattern: \"[0-9]*[.]?[0-9]*\" \n                }\n              }}\n            />\n            \n            {/* Parent Location Autocomplete */}\n            <Autocomplete<CustomLocation | null>\n              options={locations}\n              getOptionLabel={(option: CustomLocation | null) => option?.name || ''}\n              value={locations.find(loc => loc.id === formData.parentLocationId) || null}\n              onChange={(_event: React.ChangeEvent<{}> | null, selectedOption: CustomLocation | null) => {\n                onChange('parentLocationId', selectedOption?.id || '');\n              }}\n              isOptionEqualToValue={(option: CustomLocation | null, value: CustomLocation | null) => option?.id === value?.id}\n              renderInput={(params: any) => (\n                <TextField \n                  {...params}\n                  label=\"Parent Location\"\n                  placeholder=\"Select a parent location\" \n                  fullWidth\n                />\n              )}\n            />\n            \n            {/* Simplified mixWithParent toggle */}\n            <div className=\"flex items-center mt-2 mb-4\">\n              <input\n                type=\"checkbox\"\n                id=\"mixWithParent\"\n                checked={formData.mixWithParent}\n                onChange={(e) => {\n                  console.log(\"Direct checkbox toggled:\", e.target.checked);\n                  onChange('mixWithParent', e.target.checked);\n                }}\n                className=\"h-4 w-4 text-blue-500 rounded border-gray-300 focus:ring-blue-500\"\n              />\n              <label htmlFor=\"mixWithParent\" className=\"ml-2 text-sm font-medium\">\n                Mix with parent location audio\n              </label>\n            </div>\n            \n            {/* Background Music Autocomplete - Enhanced to prevent hover issues */}\n            <Autocomplete<string | null>\n              options={audioFiles}\n              getOptionLabel={(option: string | null) => option || ''}\n              value={formData.backgroundMusic || null}\n              onChange={(_event: React.ChangeEvent<{}> | null, selectedOption: string | null) => {\n                console.log('BGM selected:', selectedOption);\n                onChange('backgroundMusic', selectedOption || '');\n              }}\n              isOptionEqualToValue={(option: string | null, value: string | null) => option === value}\n              renderInput={(params: any) => (\n                <TextField \n                  {...params}\n                  label=\"Background Music\"\n                  placeholder=\"Select background music\" \n                  fullWidth\n                  // Add input name for debugging\n                  name=\"bgm-autocomplete-input\"\n                />\n              )}\n            />\n            \n            {/* Entry Sound Autocomplete */}\n            <Autocomplete<string | null>\n              options={audioFiles}\n              getOptionLabel={(option: string | null) => option || ''}\n              value={formData.entrySound || null}\n              onChange={(_event: React.ChangeEvent<{}> | null, selectedOption: string | null) => {\n                onChange('entrySound', selectedOption || '');\n              }}\n              isOptionEqualToValue={(option: string | null, value: string | null) => option === value}\n              renderInput={(params: any) => (\n                <TextField \n                  {...params}\n                  label=\"Entry Sound\"\n                  placeholder=\"Select entry sound\" \n                  fullWidth\n                />\n              )}\n            />\n            \n            {/* Image URL Autocomplete */}\n            <Autocomplete<string | null>\n              options={imageFiles}\n              getOptionLabel={(option: string | null) => option || ''}\n              value={formData.imageUrl || null}\n              onChange={(_event: React.ChangeEvent<{}> | null, selectedOption: string | null) => {\n                onChange('imageUrl', selectedOption || '');\n              }}\n              isOptionEqualToValue={(option: string | null, value: string | null) => option === value}\n              renderInput={(params: any) => (\n                <TextField \n                  {...params}\n                  label=\"Image URL\"\n                  placeholder=\"Select an image\" \n                  fullWidth\n                />\n              )}\n            />\n            \n            {/* Connected Locations Autocomplete - Multiple Selection */}\n            <MultiAutocomplete<LocationType>\n              options={locations.filter(loc => loc.id !== formData.parentLocationId)}\n              getOptionLabel={(option: LocationType) => option.name}\n              value={selectedConnectedLocations}\n              onChange={(_event: React.ChangeEvent<{}> | null, selectedOptions: LocationType[]) => {\n                onChange('connectedLocations', selectedOptions.map(opt => opt.id));\n              }}\n              isOptionEqualToValue={(option: LocationType, value: LocationType) => option.id === value.id}\n              renderInput={(params: any) => (\n                <TextField \n                  {...params}\n                  label=\"Connected Locations\"\n                  placeholder=\"Select connected locations\" \n                  fullWidth\n                />\n              )}\n              renderTags={(tagValue: LocationType[], getTagProps: any) =>\n                tagValue.map((option: LocationType, index: number) => (\n                  <Chip \n                    label={option.name} \n                    {...getTagProps({ index })} \n                    key={option.id}\n                  />\n                ))\n              }\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onPress={onClose}>Cancel</Button>\n          <Button \n            onPress={handleSubmit} \n            isDisabled={!formData.name}\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}; ","import { useState, useEffect, useMemo } from 'react';\nimport { useStore } from '../../../store';\nimport { CustomLocation } from '../../../store';\nimport { AssetManager } from '../../../services/assetManager';\n\nexport const useLocations = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [audioFiles, setAudioFiles] = useState<string[]>([]);\n  const [imageFiles, setImageFiles] = useState<string[]>([]);\n  const [expandedLocations, setExpandedLocations] = useState<Record<string, boolean>>({});\n  \n  const { \n    locations, \n    addLocation, \n    updateLocation,\n    deleteLocation, \n    getAllTopLevelLocations, \n    getSublocationsByParentId, \n    saveDataToIndexedDB \n  } = useStore();\n  \n  // Apply search filter to all locations\n  const filteredLocations = useMemo(() => {\n    if (!searchQuery.trim()) return locations;\n    \n    const searchTerms = searchQuery.toLowerCase().split(' ').filter(term => term.length > 0);\n    \n    return locations.filter(location => {\n      // Search in various location fields\n      const searchableFields = [\n        location.name.toLowerCase(),\n        location.description.toLowerCase(),\n        location.backgroundMusic?.toLowerCase() || '',\n        location.entrySound?.toLowerCase() || '',\n        location.imageUrl?.toLowerCase() || '',\n      ];\n      \n      // Connect to parent location names\n      if (location.parentLocationId) {\n        const parentLocation = locations.find(loc => loc.id === location.parentLocationId);\n        if (parentLocation) {\n          searchableFields.push(parentLocation.name.toLowerCase());\n        }\n      }\n      \n      // Connected locations\n      if (location.connectedLocations && location.connectedLocations.length > 0) {\n        location.connectedLocations.forEach(connectedId => {\n          const connectedLocation = locations.find(loc => loc.id === connectedId);\n          if (connectedLocation) {\n            searchableFields.push(connectedLocation.name.toLowerCase());\n          }\n        });\n      }\n      \n      // Check if any search term matches any field\n      return searchTerms.some(term => \n        searchableFields.some(field => field.includes(term))\n      );\n    });\n  }, [locations, searchQuery]);\n  \n  // Filter top level locations based on search results\n  const filteredTopLevelLocations = useMemo(() => {\n    if (!searchQuery.trim()) return getAllTopLevelLocations();\n    \n    // If searching, show all matching locations at top level for easier discovery\n    return filteredLocations.filter(location => !location.parentLocationId);\n  }, [filteredLocations, getAllTopLevelLocations, searchQuery]);\n  \n  // Get sublocation function that respects search filter\n  const getFilteredSublocationsByParentId = (parentId: string) => {\n    if (!searchQuery.trim()) {\n      return getSublocationsByParentId(parentId);\n    } else {\n      return filteredLocations.filter(loc => loc.parentLocationId === parentId);\n    }\n  };\n  \n  // Load audio files on component mount\n  useEffect(() => {\n    const loadAssets = async () => {\n      try {\n        const audioAssets = await AssetManager.getAssets('audio');\n        setAudioFiles(audioAssets.map(asset => asset.name));\n        \n        const imageAssets = await AssetManager.getAssets('images');\n        setImageFiles(imageAssets.map(asset => asset.name));\n      } catch (error) {\n        console.error('Error loading assets:', error);\n      }\n    };\n    \n    loadAssets();\n  }, []);\n\n  const toggleLocationExpand = (locationId: string) => {\n    setExpandedLocations(prev => ({\n      ...prev,\n      [locationId]: !prev[locationId]\n    }));\n  };\n\n  const saveData = async () => {\n    try {\n      await saveDataToIndexedDB();\n      return { success: true, message: 'Campaign data saved successfully' };\n    } catch (error) {\n      console.error('Error saving data:', error);\n      return { success: false, message: 'Error saving campaign data' };\n    }\n  };\n\n  return {\n    locations,\n    filteredLocations,\n    filteredTopLevelLocations,\n    getFilteredSublocationsByParentId,\n    audioFiles,\n    imageFiles,\n    expandedLocations,\n    searchQuery,\n    setSearchQuery,\n    toggleLocationExpand,\n    addLocation,\n    updateLocation,\n    deleteLocation,\n    saveData\n  };\n}; ","import { useState } from 'react';\nimport { CustomLocation } from '../../../store';\nimport { MapPosition } from '../../../types/location';\n\ninterface LocationFormData {\n  name: string;\n  description: string;\n  backgroundMusic: string;\n  entrySound: string;\n  imageUrl: string;\n  descriptionType: 'markdown' | 'image' | 'pdf';\n  parentLocationId: string;\n  coordinates: [number | string, number | string];\n  mixWithParent: boolean;\n  connectedLocations: string[];\n}\n\n// Helper function to format coordinates for API\nconst formatCoordinatesForAPI = (coords: [number | string, number | string]): [number, number] => {\n  return [\n    typeof coords[0] === 'string' ? parseFloat(coords[0]) || 0 : coords[0],\n    typeof coords[1] === 'string' ? parseFloat(coords[1]) || 0 : coords[1]\n  ];\n};\n\n// Helper function to convert any coordinate format to form format\nconst getFormCoordinates = (coordinates?: MapPosition | [number, number]): [number | string, number | string] => {\n  if (!coordinates) return [0, 0];\n  if (Array.isArray(coordinates)) {\n    return coordinates;\n  }\n  return [coordinates.x, coordinates.y];\n};\n\nexport const useLocationForm = (onAdd: (location: Partial<CustomLocation>) => void, onUpdate: (id: string, location: Partial<CustomLocation>) => void) => {\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [editingLocationId, setEditingLocationId] = useState<string | null>(null);\n  \n  // Separate search states for each dropdown\n  const [imageSearchQuery, setImageSearchQuery] = useState('');\n  const [parentSearchQuery, setParentSearchQuery] = useState('');\n  const [connectedSearchQuery, setConnectedSearchQuery] = useState('');\n  const [bgMusicSearchQuery, setBgMusicSearchQuery] = useState('');\n  const [entrySoundSearchQuery, setEntrySoundSearchQuery] = useState('');\n  \n  const [formData, setFormData] = useState<LocationFormData>({\n    name: '',\n    description: '',\n    backgroundMusic: '',\n    entrySound: '',\n    imageUrl: '',\n    descriptionType: 'markdown',\n    parentLocationId: '',\n    coordinates: [0, 0],\n    mixWithParent: false,\n    connectedLocations: []\n  });\n  \n  const resetForm = () => {\n    setFormData({\n      name: '',\n      description: '',\n      backgroundMusic: '',\n      entrySound: '',\n      imageUrl: '',\n      descriptionType: 'markdown',\n      parentLocationId: '',\n      coordinates: [0, 0],\n      mixWithParent: false,\n      connectedLocations: []\n    });\n    setImageSearchQuery('');\n    setParentSearchQuery('');\n    setConnectedSearchQuery('');\n    setBgMusicSearchQuery('');\n    setEntrySoundSearchQuery('');\n  };\n\n  const handleAddLocation = () => {\n    onAdd({\n      name: formData.name,\n      description: formData.description,\n      backgroundMusic: formData.backgroundMusic || undefined,\n      entrySound: formData.entrySound || undefined,\n      imageUrl: formData.imageUrl || undefined,\n      descriptionType: formData.descriptionType,\n      coordinates: formatCoordinatesForAPI(formData.coordinates),\n      parentLocationId: formData.parentLocationId || undefined,\n      mixWithParent: formData.mixWithParent,\n      connectedLocations: formData.connectedLocations.length > 0 ? formData.connectedLocations : undefined\n    });\n    \n    setIsAddDialogOpen(false);\n    resetForm();\n  };\n  \n  const handleEditLocation = (location: CustomLocation) => {\n    setEditingLocationId(location.id);\n    setFormData({\n      name: location.name,\n      description: location.description,\n      backgroundMusic: location.backgroundMusic || '',\n      entrySound: location.entrySound || '',\n      imageUrl: location.imageUrl || '',\n      descriptionType: location.descriptionType || 'markdown',\n      parentLocationId: location.parentLocationId || '',\n      coordinates: getFormCoordinates(location.coordinates),\n      mixWithParent: location.mixWithParent || false,\n      connectedLocations: location.connectedLocations || []\n    });\n    setIsEditDialogOpen(true);\n  };\n  \n  const handleSaveLocation = () => {\n    if (editingLocationId) {\n      onUpdate(editingLocationId, {\n        name: formData.name,\n        description: formData.description,\n        backgroundMusic: formData.backgroundMusic || undefined,\n        entrySound: formData.entrySound || undefined,\n        imageUrl: formData.imageUrl || undefined,\n        descriptionType: formData.descriptionType,\n        coordinates: formatCoordinatesForAPI(formData.coordinates),\n        parentLocationId: formData.parentLocationId || undefined,\n        mixWithParent: formData.mixWithParent,\n        connectedLocations: formData.connectedLocations.length > 0 ? formData.connectedLocations : undefined\n      });\n      \n      setIsEditDialogOpen(false);\n      setEditingLocationId(null);\n      resetForm();\n    }\n  };\n  \n  const handleChange = (field: keyof LocationFormData, value: any) => {\n    console.log(`handleChange called: field=${field}, value=`, value, \"type=\", typeof value);\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  \n  return {\n    formData,\n    handleChange,\n    isAddDialogOpen,\n    setIsAddDialogOpen,\n    isEditDialogOpen,\n    setIsEditDialogOpen,\n    editingLocationId,\n    imageSearchQuery,\n    setImageSearchQuery,\n    parentSearchQuery,\n    setParentSearchQuery,\n    connectedSearchQuery,\n    setConnectedSearchQuery,\n    bgMusicSearchQuery,\n    setBgMusicSearchQuery,\n    entrySoundSearchQuery,\n    setEntrySoundSearchQuery,\n    handleAddLocation,\n    handleEditLocation,\n    handleSaveLocation,\n    resetForm\n  };\n}; ","import { useState } from 'react';\n\nexport const useNotifications = () => {\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  \n  const showNotification = (message: string) => {\n    setSnackbarMessage(message);\n    setSnackbarOpen(true);\n  };\n  \n  const hideNotification = () => {\n    setSnackbarOpen(false);\n  };\n  \n  return {\n    snackbarOpen,\n    snackbarMessage,\n    showNotification,\n    hideNotification\n  };\n}; ","import React, { useState, Fragment } from 'react';\nimport { \n  Button, \n  Paper, \n  Snackbar, \n  IconButton,\n  Typography\n} from '../../../components/ui';\nimport { \n  AddIcon, \n  SaveIcon, \n  CloseIcon, \n  SearchIcon,\n  ExpandLessIcon,\n  ExpandMoreIcon as FormatListBulletedIcon,\n  MenuIcon as FilterIcon,\n  PlaceIcon,\n} from '../../../assets/icons';\nimport { LocationItem } from '../components/LocationItem';\nimport { LocationSearch } from '../components/LocationSearch';\nimport { LocationDescriptionDialog } from '../components/LocationDescriptionDialog';\nimport { LocationFormDialog } from '../components/LocationFormDialog';\nimport { useLocations, useLocationForm, useNotifications } from '../hooks';\nimport { CustomLocation } from '../../../store';\n\n// Function to get sublocations - declare here to avoid errors\nconst getFilteredSublocationsByParentId = (parentId: string) => [];\n\n// Updating the interface for LocationFormData to match what's used in the hook\ninterface LocationFormData {\n  name: string;\n  description: string;\n  backgroundMusic: string;\n  entrySound: string;\n  imageUrl: string;\n  descriptionType: 'markdown' | 'image' | 'pdf';\n  parentLocationId: string;\n  coordinates: [number | string, number | string];\n  mixWithParent: boolean;\n  connectedLocations: string[];\n}\n\nexport const LocationsView: React.FC = () => {\n  const { \n    locations,\n    filteredLocations,\n    filteredTopLevelLocations,\n    getFilteredSublocationsByParentId,\n    audioFiles,\n    imageFiles,\n    expandedLocations,\n    searchQuery,\n    setSearchQuery,\n    toggleLocationExpand,\n    addLocation,\n    updateLocation,\n    deleteLocation,\n    saveData\n  } = useLocations();\n\n  const { \n    showNotification, \n    hideNotification, \n    snackbarOpen, \n    snackbarMessage \n  } = useNotifications();\n\n  const {\n    formData,\n    handleChange,\n    isAddDialogOpen,\n    setIsAddDialogOpen,\n    isEditDialogOpen,\n    setIsEditDialogOpen,\n    editingLocationId,\n    imageSearchQuery,\n    setImageSearchQuery,\n    parentSearchQuery,\n    setParentSearchQuery,\n    connectedSearchQuery,\n    setConnectedSearchQuery,\n    bgMusicSearchQuery,\n    setBgMusicSearchQuery,\n    entrySoundSearchQuery,\n    setEntrySoundSearchQuery,\n    handleAddLocation,\n    handleEditLocation,\n    handleSaveLocation,\n    resetForm\n  } = useLocationForm(\n    // Wrap addLocation to ensure required fields are present\n    (locationData) => {\n      // Ensure name field is always provided\n      const data: Omit<CustomLocation, 'id'> = {\n        name: locationData.name || 'New Location', // Provide a default name if undefined\n        description: locationData.description || '',\n        backgroundMusic: locationData.backgroundMusic,\n        entrySound: locationData.entrySound,\n        imageUrl: locationData.imageUrl,\n        descriptionType: locationData.descriptionType || 'markdown',\n        coordinates: locationData.coordinates || [0, 0],\n        parentLocationId: locationData.parentLocationId,\n        mixWithParent: locationData.mixWithParent || false,\n        connectedLocations: locationData.connectedLocations\n      };\n      addLocation(data);\n      showNotification('Location added successfully');\n    },\n    (id, locationData) => {\n      updateLocation(id, locationData);\n      showNotification('Location updated successfully');\n    }\n  );\n\n  // Location description dialog state\n  const [showDescriptionDialog, setShowDescriptionDialog] = useState(false);\n  const [viewingLocationDescription, setViewingLocationDescription] = useState<string>(\"\");\n  const [viewingLocationName, setViewingLocationName] = useState<string>(\"\");\n  const [viewingDescriptionType, setViewingDescriptionType] = useState<'markdown' | 'image' | 'pdf'>('markdown');\n\n  // View options state\n  const [isGridView, setIsGridView] = useState(false);\n\n  // Add a state for current parent in grid view\n  const [currentParentId, setCurrentParentId] = useState<string | null>(null);\n\n  // Add a state to track when search is active\n  const [isSearchActive, setIsSearchActive] = useState(false);\n\n  const handleViewDescription = (locationId: string) => {\n    const location = locations.find(loc => loc.id === locationId);\n    if (location) {\n      setViewingLocationName(location.name);\n      setViewingLocationDescription(location.description);\n      setViewingDescriptionType(location.descriptionType || 'markdown');\n      setShowDescriptionDialog(true);\n    }\n  };\n\n  const handleDeleteLocation = (locationId: string) => {\n    if (window.confirm('Are you sure you want to delete this location? This action cannot be undone.')) {\n      deleteLocation(locationId);\n      showNotification('Location deleted successfully');\n    }\n  };\n\n  const handleSaveData = async () => {\n    const result = await saveData();\n    showNotification(result.message);\n  };\n\n  const handleToggleExpand = (locationId: string) => {\n    if (isGridView) {\n      // In grid view, set this as current parent to show only its children\n      setCurrentParentId(locationId);\n    } else {\n      // In tree view, use the standard expand/collapse\n      toggleLocationExpand(locationId);\n    }\n  };\n\n  const handleNavigateUp = () => {\n    // Find current parent location\n    const currentParent = currentParentId \n      ? locations.find(loc => loc.id === currentParentId) \n      : null;\n    \n    // Navigate to grandparent or back to root\n    setCurrentParentId(currentParent?.parentLocationId || null);\n  };\n\n  const renderLocationTree = (locationId: string, level = 0): React.ReactNode => {\n    const location = locations.find(loc => loc.id === locationId);\n    if (!location) return null;\n    \n    const sublocations = getFilteredSublocationsByParentId(locationId);\n    const isExpanded = expandedLocations[locationId] || false;\n    const hasChildren = sublocations.length > 0;\n    \n    return (\n      <Fragment key={locationId}>\n        <LocationItem\n          location={location}\n          level={level}\n          isExpanded={isExpanded}\n          hasChildren={hasChildren}\n          onToggleExpand={toggleLocationExpand}\n          onEdit={handleEditLocation}\n          onDelete={handleDeleteLocation}\n          onViewDescription={handleViewDescription}\n          gridView={isGridView}\n        />\n        {hasChildren && isExpanded && (\n          <div className={isGridView ? \"pl-3\" : \"pl-5\"}>\n            {sublocations.map(subloc => renderLocationTree(subloc.id, level + 1))}\n          </div>\n        )}\n      </Fragment>\n    );\n  };\n\n  const renderGrid = () => {\n    let locationsToDisplay: CustomLocation[] = [];\n    let currentParent: CustomLocation | null = null;\n    \n    if (currentParentId) {\n      // Show children of current parent\n      currentParent = locations.find(loc => loc.id === currentParentId) || null;\n      locationsToDisplay = getFilteredSublocationsByParentId(currentParentId);\n    } else {\n      // Show filtered top level locations\n      locationsToDisplay = filteredTopLevelLocations;\n    }\n    \n    // If no locations found at this level, show a message\n    if (locationsToDisplay.length === 0) {\n      return (\n        <div className=\"text-center py-12\">\n          {currentParent ? (\n            <>\n              <p className=\"text-text-secondary text-lg mb-6\">No sublocations found for {currentParent.name}.</p>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onPress={() => {\n                  handleEditLocation(currentParent!);\n                  setIsAddDialogOpen(true);\n                  // Pre-fill parent ID\n                  handleChange('parentLocationId', currentParent!.id);\n                }}\n                className=\"mr-4\"\n              >\n                Add Sublocation\n              </Button>\n              <Button\n                variant=\"outlined\"\n                onPress={handleNavigateUp}\n              >\n                Back to {currentParent.parentLocationId ? 'Parent' : 'All Locations'}\n              </Button>\n            </>\n          ) : (\n            <>\n              <div className=\"w-20 h-20 mx-auto mb-4 rounded-full bg-background-surface flex items-center justify-center\">\n                <PlaceIcon className=\"text-4xl text-text-secondary\" />\n              </div>\n              <p className=\"text-text-secondary text-lg mb-6\">No locations found. Create your first location to get started.</p>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onPress={() => setIsAddDialogOpen(true)}\n                className=\"btn-glow\"\n              >\n                Create Location\n              </Button>\n            </>\n          )}\n        </div>\n      );\n    }\n    \n    return (\n      <>\n        {/* Breadcrumb navigation */}\n        {currentParent && (\n          <div className=\"mb-4 p-3 glass-effect rounded-lg flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <IconButton \n                className=\"mr-2 text-primary-light\"\n                onClick={handleNavigateUp}\n              >\n                <ExpandLessIcon />\n              </IconButton>\n              <div>\n                <Typography variant=\"body2\" className=\"text-text-secondary\">\n                  Current Location\n                </Typography>\n                <Typography variant=\"h6\" className=\"font-display font-bold text-primary-light\">\n                  {currentParent.name}\n                </Typography>\n              </div>\n            </div>\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              startIcon={<AddIcon />}\n              onPress={() => {\n                setIsAddDialogOpen(true);\n                // Pre-fill parent ID\n                handleChange('parentLocationId', currentParent.id);\n              }}\n            >\n              Add Sublocation\n            </Button>\n          </div>\n        )}\n        \n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          {locationsToDisplay.map(location => {\n            const sublocations = getFilteredSublocationsByParentId(location.id);\n            const hasChildren = sublocations.length > 0;\n            const parentLocation = location.parentLocationId \n              ? locations.find(loc => loc.id === location.parentLocationId) \n              : null;\n              \n            return (\n              <LocationItem\n                key={location.id}\n                location={location}\n                level={0} // No indent in grid view\n                isExpanded={false} // Always false in grid view since we're using a different model\n                hasChildren={hasChildren}\n                onToggleExpand={handleToggleExpand}\n                onEdit={handleEditLocation}\n                onDelete={handleDeleteLocation}\n                onViewDescription={handleViewDescription}\n                gridView={true}\n                parentLocation={parentLocation}\n              />\n            );\n          })}\n        </div>\n      </>\n    );\n  };\n\n  // Update search query handler to enable flat search view\n  const handleSearchChange = (query: string) => {\n    setSearchQuery(query);\n    // Set search as active if there's text in the search box\n    setIsSearchActive(query.length > 0);\n    \n    // When starting to search, reset the current parent if in grid view\n    if (query.length > 0 && isGridView) {\n      setCurrentParentId(null);\n    }\n  };\n\n  // Add a function to render search results in a flat view\n  const renderSearchResults = () => {\n    if (!isSearchActive || filteredLocations.length === 0) {\n      return (\n        <div className=\"text-center py-12\">\n          <p className=\"text-text-secondary text-lg\">No locations match your search.</p>\n        </div>\n      );\n    }\n\n    if (isGridView) {\n      // Render grid-style search results\n      return (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          {filteredLocations.map(location => {\n            const sublocations = getFilteredSublocationsByParentId(location.id);\n            const hasChildren = sublocations.length > 0;\n            const parentLocation = location.parentLocationId \n              ? locations.find(loc => loc.id === location.parentLocationId) \n              : null;\n              \n            return (\n              <LocationItem\n                key={location.id}\n                location={location}\n                level={0}\n                isExpanded={false}\n                hasChildren={hasChildren}\n                onToggleExpand={handleToggleExpand}\n                onEdit={handleEditLocation}\n                onDelete={handleDeleteLocation}\n                onViewDescription={handleViewDescription}\n                gridView={true}\n                parentLocation={parentLocation}\n              />\n            );\n          })}\n        </div>\n      );\n    } else {\n      // Render list-style search results\n      return (\n        <div className=\"space-y-2\">\n          {filteredLocations.map(location => {\n            const sublocations = getFilteredSublocationsByParentId(location.id);\n            const hasChildren = sublocations.length > 0;\n            const parentLocation = location.parentLocationId \n              ? locations.find(loc => loc.id === location.parentLocationId) \n              : null;\n              \n            return (\n              <LocationItem\n                key={location.id}\n                location={location}\n                level={0}\n                isExpanded={false}\n                hasChildren={hasChildren}\n                onToggleExpand={toggleLocationExpand}\n                onEdit={handleEditLocation}\n                onDelete={handleDeleteLocation}\n                onViewDescription={handleViewDescription}\n                gridView={false}\n                parentLocation={parentLocation}\n              />\n            );\n          })}\n        </div>\n      );\n    }\n  };\n\n  // Cast handleChange to the expected type for the form dialog\n  const handleFormChange = (field: string, value: any) => {\n    console.log(`LocationsView.handleFormChange: field=${field}, value=`, value, \"type=\", typeof value);\n    // Make sure to preserve the boolean type for boolean fields like mixWithParent\n    handleChange(field as keyof LocationFormData, value);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-6 max-w-screen-2xl\">\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-6\">\n        <h1 className=\"text-3xl font-display font-bold bg-gradient-to-r from-primary-light to-secondary-light bg-clip-text text-transparent\">\n          Locations\n        </h1>\n        <div className=\"flex items-center space-x-3 mt-3 md:mt-0\">\n          <Button \n            startIcon={<AddIcon />}\n            variant=\"contained\" \n            color=\"primary\"\n            onPress={() => setIsAddDialogOpen(true)}\n            className=\"btn-glow\"\n          >\n            Add Location\n          </Button>\n          <Button \n            startIcon={<SaveIcon />}\n            variant=\"outlined\"\n            onPress={handleSaveData}\n          >\n            Save Data\n          </Button>\n        </div>\n      </div>\n\n      {/* Floating search and view toggle */}\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-4\">\n        <div className=\"flex-grow w-full md:w-auto shadow-md rounded-xl\">\n          <LocationSearch\n            searchQuery={searchQuery}\n            onSearchChange={handleSearchChange}\n            resultsCount={isSearchActive \n              ? filteredLocations.length \n              : (isGridView && currentParentId \n                ? getFilteredSublocationsByParentId(currentParentId).length \n                : filteredTopLevelLocations.length)}\n            totalCount={locations.length}\n          />\n        </div>\n        <div className=\"flex items-center\">\n          <Button \n            startIcon={isGridView ? <FilterIcon /> : <SearchIcon />}\n            variant=\"contained\" \n            color=\"secondary\"\n            onPress={() => {\n              setIsGridView(!isGridView);\n              // Reset current parent when toggling views\n              setCurrentParentId(null);\n            }}\n            className=\"shadow-md rounded-xl\"\n          >\n            {isGridView ? \"Tree View\" : \"Grid View\"}\n          </Button>\n        </div>\n      </div>\n\n      {/* Current location path navigation - Only show in grid view with a parent */}\n      {isGridView && currentParentId && (\n        <div className=\"mb-4 py-2 px-4 bg-background-surface/40 rounded-xl shadow-sm flex items-center\">\n          <Button\n            variant=\"text\"\n            startIcon={<ExpandLessIcon />}\n            onPress={handleNavigateUp}\n            className=\"text-text-secondary hover:text-text-primary\"\n          >\n            Back\n          </Button>\n          <div className=\"mx-2 text-text-secondary\">/</div>\n          <Typography className=\"text-text-primary font-medium\">\n            {locations.find(loc => loc.id === currentParentId)?.name || 'Unknown Location'}\n          </Typography>\n        </div>\n      )}\n\n      {/* Direct content area without nested containers */}\n      <div className=\"mb-6\">\n        {isSearchActive \n          ? renderSearchResults() \n          : ((isGridView && renderGrid()) || \n            (!isGridView && filteredTopLevelLocations.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <div className=\"w-20 h-20 mx-auto mb-4 rounded-full bg-background-surface flex items-center justify-center\">\n                  <PlaceIcon className=\"text-4xl text-text-secondary\" />\n                </div>\n                <p className=\"text-text-secondary text-lg mb-6\">No locations found. Create your first location to get started.</p>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onPress={() => setIsAddDialogOpen(true)}\n                  className=\"btn-glow\"\n                >\n                  Create Location\n                </Button>\n              </div>\n            ) : (\n              <div className=\"overflow-auto shadow-md rounded-xl bg-background-surface/30 p-4\">\n                <div className=\"space-y-1\">\n                  {filteredTopLevelLocations.map(location => renderLocationTree(location.id))}\n                </div>\n              </div>\n            )))}\n      </div>\n\n      {/* Add Location Dialog */}\n      <LocationFormDialog\n        open={isAddDialogOpen}\n        onClose={() => {\n          setIsAddDialogOpen(false);\n          resetForm();\n        }}\n        title=\"Add New Location\"\n        formData={formData}\n        onChange={handleFormChange}\n        onSubmit={handleAddLocation}\n        locations={locations}\n        audioFiles={audioFiles}\n        imageFiles={imageFiles}\n        imageSearchQuery={imageSearchQuery}\n        setImageSearchQuery={setImageSearchQuery}\n        parentSearchQuery={parentSearchQuery}\n        setParentSearchQuery={setParentSearchQuery}\n        connectedSearchQuery={connectedSearchQuery}\n        setConnectedSearchQuery={setConnectedSearchQuery}\n        bgMusicSearchQuery={bgMusicSearchQuery}\n        setBgMusicSearchQuery={setBgMusicSearchQuery}\n        entrySoundSearchQuery={entrySoundSearchQuery}\n        setEntrySoundSearchQuery={setEntrySoundSearchQuery}\n      />\n\n      {/* Edit Location Dialog */}\n      <LocationFormDialog\n        open={isEditDialogOpen}\n        onClose={() => {\n          setIsEditDialogOpen(false);\n          resetForm();\n        }}\n        title=\"Edit Location\"\n        formData={formData}\n        onChange={handleFormChange}\n        onSubmit={handleSaveLocation}\n        locations={locations}\n        audioFiles={audioFiles}\n        imageFiles={imageFiles}\n        imageSearchQuery={imageSearchQuery}\n        setImageSearchQuery={setImageSearchQuery}\n        parentSearchQuery={parentSearchQuery}\n        setParentSearchQuery={setParentSearchQuery}\n        connectedSearchQuery={connectedSearchQuery}\n        setConnectedSearchQuery={setConnectedSearchQuery}\n        bgMusicSearchQuery={bgMusicSearchQuery}\n        setBgMusicSearchQuery={setBgMusicSearchQuery}\n        entrySoundSearchQuery={entrySoundSearchQuery}\n        setEntrySoundSearchQuery={setEntrySoundSearchQuery}\n      />\n\n      {/* View Description Dialog */}\n      <LocationDescriptionDialog\n        open={showDescriptionDialog}\n        onClose={() => setShowDescriptionDialog(false)}\n        locationName={viewingLocationName}\n        description={viewingLocationDescription}\n        descriptionType={viewingDescriptionType}\n      />\n\n      {/* Notifications */}\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={hideNotification}\n        message={snackbarMessage}\n        action={\n          <IconButton \n            size=\"small\" \n            aria-label=\"close\"\n            onClick={hideNotification}\n          >\n            <CloseIcon />\n          </IconButton>\n        }\n      />\n    </div>\n  );\n}; "],"names":["MultiAutocomplete","props","jsx","Autocomplete","LocationItem","location","level","isExpanded","hasChildren","onToggleExpand","onEdit","onDelete","onViewDescription","gridView","parentLocation","testIdName","hasDescription","hasImage","_a","hasBackgroundMusic","_b","hasEntrySound","_c","bgMusicName","entrySoundName","shortDescription","sublocations","getFilteredSublocationsByParentId","getBorderColor","colors","jsxs","Card","CardContent","PlaceIcon","Typography","Chip","MusicNoteIcon","CardActions","IconButton","HelpIcon","EditIcon","e","DeleteIcon","ExpandMoreIcon","ListItem","ExpandLessIcon","parentId","LocationSearch","searchQuery","onSearchChange","resultsCount","totalCount","TextField","value","InputAdornment","SearchIcon","ClearIcon","LocationDescriptionDialog","open","onClose","locationName","description","descriptionType","Dialog","DialogTitle","CloseIcon","DialogContent","MarkdownContent","DialogActions","Button","LocationFormDialog","title","formData","onChange","onSubmit","locations","audioFiles","imageFiles","imageSearchQuery","setImageSearchQuery","parentSearchQuery","setParentSearchQuery","connectedSearchQuery","setConnectedSearchQuery","bgMusicSearchQuery","setBgMusicSearchQuery","entrySoundSearchQuery","setEntrySoundSearchQuery","handleSubmit","selectedConnectedLocations","loc","Box","option","_event","selectedOption","params","selectedOptions","opt","tagValue","getTagProps","index","createElement","useLocations","setSearchQuery","useState","setAudioFiles","setImageFiles","expandedLocations","setExpandedLocations","addLocation","updateLocation","deleteLocation","getAllTopLevelLocations","getSublocationsByParentId","saveDataToIndexedDB","useStore","filteredLocations","useMemo","searchTerms","term","searchableFields","connectedId","connectedLocation","field","filteredTopLevelLocations","useEffect","audioAssets","AssetManager","asset","imageAssets","error","locationId","prev","formatCoordinatesForAPI","coords","getFormCoordinates","coordinates","useLocationForm","onAdd","onUpdate","isAddDialogOpen","setIsAddDialogOpen","isEditDialogOpen","setIsEditDialogOpen","editingLocationId","setEditingLocationId","setFormData","resetForm","useNotifications","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","message","LocationsView","toggleLocationExpand","saveData","showNotification","hideNotification","handleChange","handleAddLocation","handleEditLocation","handleSaveLocation","locationData","data","id","showDescriptionDialog","setShowDescriptionDialog","viewingLocationDescription","setViewingLocationDescription","viewingLocationName","setViewingLocationName","viewingDescriptionType","setViewingDescriptionType","isGridView","setIsGridView","currentParentId","setCurrentParentId","isSearchActive","setIsSearchActive","handleViewDescription","handleDeleteLocation","handleSaveData","result","handleToggleExpand","handleNavigateUp","currentParent","renderLocationTree","Fragment","subloc","renderGrid","locationsToDisplay","AddIcon","handleSearchChange","query","renderSearchResults","handleFormChange","SaveIcon","FilterIcon","Snackbar"],"mappings":"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"}