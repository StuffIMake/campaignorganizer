{"version":3,"file":"useHover-DdTbeILI.js","sources":["../../node_modules/@react-aria/interactions/dist/useHover.mjs"],"sourcesContent":["import {useGlobalListeners as $AWxnT$useGlobalListeners, getOwnerDocument as $AWxnT$getOwnerDocument, nodeContains as $AWxnT$nodeContains} from \"@react-aria/utils\";\nimport {useState as $AWxnT$useState, useRef as $AWxnT$useRef, useEffect as $AWxnT$useEffect, useMemo as $AWxnT$useMemo} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\nlet $6179b936705e76d3$var$hoverCount = 0;\nfunction $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {\n    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;\n    // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n    // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n    // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n    // the distant future because a user previously touched the element.\n    setTimeout(()=>{\n        $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\n    }, 50);\n}\nfunction $6179b936705e76d3$var$handleGlobalPointerEvent(e) {\n    if (e.pointerType === 'touch') $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();\n}\nfunction $6179b936705e76d3$var$setupGlobalTouchEvents() {\n    if (typeof document === 'undefined') return;\n    if (typeof PointerEvent !== 'undefined') document.addEventListener('pointerup', $6179b936705e76d3$var$handleGlobalPointerEvent);\n    else if (process.env.NODE_ENV === 'test') document.addEventListener('touchend', $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n    $6179b936705e76d3$var$hoverCount++;\n    return ()=>{\n        $6179b936705e76d3$var$hoverCount--;\n        if ($6179b936705e76d3$var$hoverCount > 0) return;\n        if (typeof PointerEvent !== 'undefined') document.removeEventListener('pointerup', $6179b936705e76d3$var$handleGlobalPointerEvent);\n        else if (process.env.NODE_ENV === 'test') document.removeEventListener('touchend', $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n    };\n}\nfunction $6179b936705e76d3$export$ae780daf29e6d456(props) {\n    let { onHoverStart: onHoverStart, onHoverChange: onHoverChange, onHoverEnd: onHoverEnd, isDisabled: isDisabled } = props;\n    let [isHovered, setHovered] = (0, $AWxnT$useState)(false);\n    let state = (0, $AWxnT$useRef)({\n        isHovered: false,\n        ignoreEmulatedMouseEvents: false,\n        pointerType: '',\n        target: null\n    }).current;\n    (0, $AWxnT$useEffect)($6179b936705e76d3$var$setupGlobalTouchEvents, []);\n    let { addGlobalListener: addGlobalListener, removeAllGlobalListeners: removeAllGlobalListeners } = (0, $AWxnT$useGlobalListeners)();\n    let { hoverProps: hoverProps, triggerHoverEnd: triggerHoverEnd } = (0, $AWxnT$useMemo)(()=>{\n        let triggerHoverStart = (event, pointerType)=>{\n            state.pointerType = pointerType;\n            if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) return;\n            state.isHovered = true;\n            let target = event.currentTarget;\n            state.target = target;\n            // When an element that is hovered over is removed, no pointerleave event is fired by the browser,\n            // even though the originally hovered target may have shrunk in size so it is no longer hovered.\n            // However, a pointerover event will be fired on the new target the mouse is over.\n            // In Chrome this happens immediately. In Safari and Firefox, it happens upon moving the mouse one pixel.\n            addGlobalListener((0, $AWxnT$getOwnerDocument)(event.target), 'pointerover', (e)=>{\n                if (state.isHovered && state.target && !(0, $AWxnT$nodeContains)(state.target, e.target)) triggerHoverEnd(e, e.pointerType);\n            }, {\n                capture: true\n            });\n            if (onHoverStart) onHoverStart({\n                type: 'hoverstart',\n                target: target,\n                pointerType: pointerType\n            });\n            if (onHoverChange) onHoverChange(true);\n            setHovered(true);\n        };\n        let triggerHoverEnd = (event, pointerType)=>{\n            let target = state.target;\n            state.pointerType = '';\n            state.target = null;\n            if (pointerType === 'touch' || !state.isHovered || !target) return;\n            state.isHovered = false;\n            removeAllGlobalListeners();\n            if (onHoverEnd) onHoverEnd({\n                type: 'hoverend',\n                target: target,\n                pointerType: pointerType\n            });\n            if (onHoverChange) onHoverChange(false);\n            setHovered(false);\n        };\n        let hoverProps = {};\n        if (typeof PointerEvent !== 'undefined') {\n            hoverProps.onPointerEnter = (e)=>{\n                if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') return;\n                triggerHoverStart(e, e.pointerType);\n            };\n            hoverProps.onPointerLeave = (e)=>{\n                if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, e.pointerType);\n            };\n        } else if (process.env.NODE_ENV === 'test') {\n            hoverProps.onTouchStart = ()=>{\n                state.ignoreEmulatedMouseEvents = true;\n            };\n            hoverProps.onMouseEnter = (e)=>{\n                if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents) triggerHoverStart(e, 'mouse');\n                state.ignoreEmulatedMouseEvents = false;\n            };\n            hoverProps.onMouseLeave = (e)=>{\n                if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, 'mouse');\n            };\n        }\n        return {\n            hoverProps: hoverProps,\n            triggerHoverEnd: triggerHoverEnd\n        };\n    }, [\n        onHoverStart,\n        onHoverChange,\n        onHoverEnd,\n        isDisabled,\n        state,\n        addGlobalListener,\n        removeAllGlobalListeners\n    ]);\n    (0, $AWxnT$useEffect)(()=>{\n        // Call the triggerHoverEnd as soon as isDisabled changes to true\n        // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n        if (isDisabled) triggerHoverEnd({\n            currentTarget: state.target\n        }, state.pointerType);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        isDisabled\n    ]);\n    return {\n        hoverProps: hoverProps,\n        isHovered: isHovered\n    };\n}\n\n\nexport {$6179b936705e76d3$export$ae780daf29e6d456 as useHover};\n//# sourceMappingURL=useHover.module.js.map\n"],"names":["$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents","$6179b936705e76d3$var$hoverCount","$6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents","$6179b936705e76d3$var$handleGlobalPointerEvent","e","$6179b936705e76d3$var$setupGlobalTouchEvents","$6179b936705e76d3$export$ae780daf29e6d456","props","onHoverStart","onHoverChange","onHoverEnd","isDisabled","isHovered","setHovered","$AWxnT$useState","state","$AWxnT$useRef","$AWxnT$useEffect","addGlobalListener","removeAllGlobalListeners","$AWxnT$useGlobalListeners","hoverProps","triggerHoverEnd","$AWxnT$useMemo","triggerHoverStart","event","pointerType","target","$AWxnT$getOwnerDocument","$AWxnT$nodeContains"],"mappings":"wGAsBA,IAAIA,EAAwD,GACxDC,EAAmC,EACvC,SAASC,GAA2D,CACRF,EAAA,GAKxD,WAAW,IAAI,CAC6CA,EAAA,IACzD,EAAE,CACT,CACA,SAASG,EAA+CC,EAAG,CACnDA,EAAE,cAAgB,SAAkEF,EAAA,CAC5F,CACA,SAASG,GAA+C,CAChD,GAAA,SAAO,SAAa,KACxB,OAAI,OAAO,aAAiB,KAAsB,SAAA,iBAAiB,YAAaF,CAA8C,EAE9HF,IACO,IAAI,CACPA,IACI,EAAAA,EAAmC,IACnC,OAAO,aAAiB,KAAsB,SAAA,oBAAoB,YAAaE,CAA8C,CAErI,CACJ,CACA,SAASG,EAA0CC,EAAO,CACtD,GAAI,CAAE,aAAAC,EAA4B,cAAAC,EAA8B,WAAAC,EAAwB,WAAAC,CAA2B,EAAAJ,EAC/G,CAACK,EAAWC,CAAU,EAAQC,EAAAA,SAAiB,EAAK,EACpDC,EAAYC,SAAe,CAC3B,UAAW,GACX,0BAA2B,GAC3B,YAAa,GACb,OAAQ,IACX,CAAA,EAAE,QACCC,EAAA,UAAkBZ,EAA8C,EAAE,EACtE,GAAI,CAAE,kBAAAa,EAAsC,yBAAAC,CAAmD,EAAQC,EAA2B,EAC9H,CAAE,WAAAC,EAAwB,gBAAAC,GAAyCC,UAAgB,IAAI,CACnF,IAAAC,EAAoB,CAACC,EAAOC,IAAc,CAEtC,GADJX,EAAM,YAAcW,EAChBf,GAAce,IAAgB,SAAWX,EAAM,WAAa,CAACU,EAAM,cAAc,SAASA,EAAM,MAAM,EAAG,OAC7GV,EAAM,UAAY,GAClB,IAAIY,EAASF,EAAM,cACnBV,EAAM,OAASY,EAKfT,EAAsBU,EAAyBH,EAAM,MAAM,EAAG,cAAgBrB,GAAI,CAC1EW,EAAM,WAAaA,EAAM,QAAU,CAAKc,EAAqBd,EAAM,OAAQX,EAAE,MAAM,GAAGkB,EAAgBlB,EAAGA,EAAE,WAAW,CAAA,EAC3H,CACC,QAAS,EAAA,CACZ,EACGI,GAA2BA,EAAA,CAC3B,KAAM,aACN,OAAAmB,EACA,YAAAD,CAAA,CACH,EACGjB,KAA6B,EAAI,EACrCI,EAAW,EAAI,CACnB,EACIS,EAAkB,CAACG,EAAOC,IAAc,CACxC,IAAIC,EAASZ,EAAM,OACnBA,EAAM,YAAc,GACpBA,EAAM,OAAS,KACX,EAAAW,IAAgB,SAAW,CAACX,EAAM,WAAa,CAACY,KACpDZ,EAAM,UAAY,GACOI,EAAA,EACrBT,GAAuBA,EAAA,CACvB,KAAM,WACN,OAAAiB,EACA,YAAAD,CAAA,CACH,EACGjB,KAA6B,EAAK,EACtCI,EAAW,EAAK,EACpB,EACIQ,EAAa,CAAC,EACd,OAAA,OAAO,aAAiB,MACxBA,EAAW,eAAkBjB,GAAI,CACzBJ,GAAyDI,EAAE,cAAgB,SAC7DoB,EAAApB,EAAGA,EAAE,WAAW,CACtC,EACAiB,EAAW,eAAkBjB,GAAI,CACzB,CAACO,GAAcP,EAAE,cAAc,SAASA,EAAE,MAAM,GAAGkB,EAAgBlB,EAAGA,EAAE,WAAW,CAC3F,GAaG,CACH,WAAYiB,EACZ,gBAAiBC,CACrB,CAAA,EACD,CACCd,EACAC,EACAC,EACAC,EACAI,EACAG,EACAC,CAAA,CACH,EACA,OAAGF,YAAkB,IAAI,CAGlBN,GAA4BW,EAAA,CAC5B,cAAeP,EAAM,MAAA,EACtBA,EAAM,WAAW,CAAA,EAErB,CACCJ,CAAA,CACH,EACM,CACH,WAAAU,EACA,UAAAT,CACJ,CACJ","x_google_ignoreList":[0]}